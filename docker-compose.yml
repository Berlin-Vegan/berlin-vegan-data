version: '3.4'

services:
    backend:
        build:
            context: ./backend/
        restart: always
        depends_on:
            - postgres
        volumes:
            - dstatic:/app/static
        env_file:
            - ./backend/.env
    frontend:
        build:
            context: ./frontend/admin/
        restart: always
        depends_on:
            - backend
    postgres:
        image: postgres:10.1-alpine
        restart: always
        volumes:
            - pgdata:/var/lib/postgresql/data/
        environment:
            - POSTGRES_DB=${POSTGRES_DB}
            - POSTGRES_USER=${POSTGRES_USER}
            - POSTGRES_PASSWORD=${POSTGRES_PASSWORD}
    entrypoint:
        image: nginx:stable-alpine
        restart: always
        ports:
            - 8000:8080
        volumes:
            - ./entrypoint/nginx-proxy.conf:/etc/nginx/conf.d/default.conf:ro
            - dstatic:/var/www/dstatic
        depends_on:
            - backend
            - frontend

volumes:
  pgdata:
  dstatic:
